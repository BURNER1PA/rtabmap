branches:  
  only:  
    - master  
    - devel  
  
os: Visual Studio 2015  
  
clone_folder: c:\projects\rtabmap  
  
platform: x64  
configuration: Release  
  
init:  
  - cmake --version  
  - call "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x64  
  - call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x86_amd64  
  
install:  
  - set PATH=C:\Python38-x64;C:\Python38-x64\Scripts;%PATH%  
  - ps: py -m pip --disable-pip-version-check install gdown>=5.1.0  
  - set QTDIR=C:\Qt\5.10.1\msvc2015_64  
  - set PATH=%QTDIR%\bin;%PATH%  
  - set PATH=%PATH%;C:\Libraries\boost_1_62_0\lib64-msvc-14.0  
  
  - ps: wget 'https://dl.dropboxusercontent.com/s/d98jv79l6oy9fxz/OpenNI2.exe?dl=0' -outfile OpenNI2.exe  
  - cmd: OpenNI2.exe -o"C:\Program Files" -y  
  - ps: |  
      Write-Host "Installed OpenNI2:"  
      ls "C:/Program Files/OpenNI2"  
  - set PATH=%PATH%;C:\Program Files\OpenNI2\Redist  
  - set OPENNI2_INCLUDE64=C:\Program Files\OpenNI2\Include  
  - set OPENNI2_LIB64=C:\Program Files\OpenNI2\Lib  
  - set OPENNI2_REDIST64=C:\Program Files\OpenNI2\Redist  
  
  - ps: wget 'https://dl.dropboxusercontent.com/s/o6ofn491bc0jso1/opencv450_vc14.exe?dl=0' -outfile opencv.exe  
  - cmd: opencv.exe -o"C:\Program Files" -y  
  - ps: |  
      Write-Host "Installed OpenCV:"  
      ls "C:/Program Files/opencv"  
  - set PATH=%PATH%;C:\Program Files\opencv\x64\vc14\bin  
  
  - ps: wget 'https://dl.dropboxusercontent.com/s/1l33b5l3f3y52gf/VTK-6_3-msvc140.exe?dl=0' -outfile VTK-6_3.exe  
  - cmd: VTK-6_3.exe -o"C:\Program Files" -y  
  - ps: |  
      Write-Host "Installed VTK:"  
      ls "C:/Program Files/VTK"  
  - set PATH=%PATH%;C:\Program Files\VTK\bin  
  
  - ps: wget 'https://dl.dropboxusercontent.com/s/9widnk9msdsh2b8/Qhull-msvc140.exe?dl=0' -outfile Qhull.exe  
  - cmd: Qhull.exe -o"C:\Program Files" -y  
  - ps: |  
      Write-Host "Installed QHull:"  
      ls "C:/Program Files/Qhull"  
  - set PATH=%PATH%;C:\Program Files\Qhull\bin  
  
  - ps: wget 'https://dl.dropboxusercontent.com/s/7k58jbmqa51sxmh/FLANN-msvc140.exe?dl=0' -outfile FLANN.exe  
  - cmd: FLANN.exe -o"C:\Program Files" -y  
  - ps: |  
      Write-Host "Installed FLANN:"  
      ls "C:/Program Files/FLANN"  
  - set PATH=%PATH%;C:\Program Files\FLANN\bin  
  
  - ps: wget 'https://dl.dropboxusercontent.com/s/3v6i9i8dxj4o8ji/Eigen.exe?dl=0' -outfile Eigen.exe  
  - cmd: Eigen.exe -o"C:\Program Files" -y  
  - ps: |  
      Write-Host "Installed Eigen:"  
      ls "C:/Program Files/Eigen"  
  
  - ps: wget 'https://dl.dropboxusercontent.com/s/2iayr4lyqa50i9j/PCL_181_August2018_x64_vc14.exe?dl=0' -outfile PCL_1.8.1.exe  
  - cmd: PCL_1.8.1.exe -o"C:\Program Files" -y  
  - ps: |  
      Write-Host "Installed PCL:"  
      ls "C:/Program Files/PCL"  
  - set PATH=%PATH%;C:\Program Files\PCL\bin  
  
  - ps: gdown -q 0B46akLGdg-uaYm9MTTI4MUtUcmc  
  - ps: Expand-Archive zlib-1.2.8-vc2010-x64.zip -DestinationPath 'C:\Program Files'  
  - ps: |  
      Write-Host "Installed zlib:"  
      ls "C:/Program Files/zlib"  
  - set PATH=%PATH%;C:\Program Files\zlib\bin  
  
  - ps: wget 'https://dl.dropboxusercontent.com/s/ht74s5pa21wokzw/g2o.exe?dl=0' -outfile g2o.exe  
  - cmd: g2o.exe -o"C:\Program Files" -y  
  - ps: |  
      Write-Host "Installed g2o:"  
      ls "C:/Program Files/g2o"  
  - set PATH=%PATH%;C:\Program Files\g2o\bin  
  
  - ps: wget 'https://dl.dropboxusercontent.com/s/0fpr6r4cgsqmvhf/GTSAM-4_0_0_alpha2-msvc140.exe?dl=0' -outfile GTSAM.exe  
  - cmd: GTSAM.exe -o"C:\Program Files" -y  
  - ps: |  
      Write-Host "Installed GTSAM:"  
      ls "C:/Program Files/GTSAM"  
  - set PATH=%PATH%;C:\Program Files\GTSAM\bin  
  
  - ps: wget 'https://dl.dropboxusercontent.com/s/6jpxu0nm8ne6e54/octomap_x64_vc14.exe?dl=0' -outfile octomap.exe  
  - cmd: octomap.exe -o"C:\Program Files" -y  
  - ps: |  
      Write-Host "Installed OctoMap:"  
      ls "C:/Program Files/octomap-distribution"  
  - set PATH=%PATH%;C:\Program Files\octomap-distribution\bin  
  
  - ps: wget 'https://dl.dropboxusercontent.com/s/mgges9va1uzxr0q/cpu_tsdf_sept2015_x64_vc14.exe?dl=0' -outfile cpu_tsdf.exe  
  - cmd: cpu_tsdf.exe -o"C:\Program Files" -y  
  - ps: |  
      Write-Host "Installed CPU-TSDF:"  
      ls "C:/Program Files/cpu_tsdf"  
  - set PATH=%PATH%;C:\Program Files\cpu_tsdf\bin  
  
  - ps: wget 'https://dl.dropboxusercontent.com/s/0aaphcde4acrinm/open_chisel_x64_vc14.exe?dl=0' -outfile open_chisel.exe  
  - cmd: open_chisel.exe -o"C:\Program Files" -y  
  - ps: |  
      Write-Host "Installed Open Chisel:"  
      ls "C:/Program Files/open_chisel"  
  - set PATH=%PATH%;C:\Program Files\open_chisel\bin  
  
  - ps: wget 'https://dl.dropboxusercontent.com/s/22qfvftwj6zq8tj/yaml-cpp_x64_vc14.exe?dl=0' -outfile yaml-cpp.exe  
  - cmd: yaml-cpp.exe -o"C:\Program Files" -y  
  - ps: |  
      Write-Host "Installed yaml-cpp:"  
      ls "C:/Program Files/yaml-cpp"  
  
  - ps: wget 'https://github.com/IntelRealSense/librealsense/releases/download/v2.40.0/Intel.RealSense.SDK-WIN10-2.40.0.2482.exe' -outfile realsense2.exe  
  - cmd: realsense2.exe /VERYSILENT  
  - ps: |  
      Write-Host "Installed RealSense2:"  
      ls "C:/Program Files (x86)/Intel RealSense SDK 2.0"  
  - set PATH=%PATH%;C:\Program Files (x86)\Intel RealSense SDK 2.0\bin\x64  
  - set RealSense2_ROOT_DIR=C:\Program Files (x86)\Intel RealSense SDK 2.0  
  
  - ps: wget 'https://download.microsoft.com/download/3/d/6/3d6d9e99-a251-4cf3-8c6a-8e108e960b4b/Azure%20Kinect%20SDK%201.4.1.exe' -outfile azure.exe  
  - cmd: azure.exe /quiet  
  - ps: |  
      Write-Host "Installed Kinect For Azure:"  
      ls "C:/Program Files/Azure Kinect SDK v1.4.1"  
  - set PATH=%PATH%;C:\Program Files\Azure Kinect SDK v1.4.1\tools  
  - set K4A_ROOT_DIR=C:\Program Files\Azure Kinect SDK v1.4.1  
  
  # libfreenect from your GitHub fork - NO LIBRARY COMBINATION  
  - ps: wget 'https://github.com/BURNER1PA/rtabmap/raw/refs/heads/master/external/freenect-prebuilt/freenect-prebuilt.zip' -outfile freenect.zip  
  - ps: Expand-Archive freenect.zip -DestinationPath 'C:\Program Files'  
  - ps: |  
      Write-Host "Contents of Program Files after extraction:"  
      ls "C:/Program Files" | Where-Object { $_.Name -like '*freenect*' -or $_.Name -like '*libfreenect*' }  
  - ps: |  
      Write-Host "Installed libfreenect:"  
      ls "C:/Program Files/libfreenect"  
  - ps: |  
      Write-Host "Verifying library files exist:"  
      Test-Path "C:/Program Files/libfreenect/lib/freenect.lib"  
      Test-Path "C:/Program Files/libfreenect/lib/libusb-1.0.lib"  
  - set PATH=%PATH%;C:\Program Files\libfreenect\bin  

   -DWITH_FREENECT2=OFF
   
before_build:  
  - cd c:\projects\rtabmap\build  
  - cmake -G "Visual Studio 14 2015 Win64" -DOpenCV_DIR="C:\Program Files\opencv\build" -DPCL_DIR="C:\Program Files\PCL\cmake" -DCPUTSDF_DIR="C:\Program Files\cpu_tsdf\share\cpu_tsdf" -Dyaml-cpp_DIR="C:\Program Files\yaml-cpp\CMake" -DFreenect_LIBRARIES="C:\Program Files\libfreenect\lib\freenect.lib;C:\Program Files\libfreenect\lib\libusb-1.0.lib" -DFreenect_INCLUDE_DIRS="C:\Program Files\libfreenect\include" -DCMAKE_EXE_LINKER_FLAGS="/LTCG" -DCMAKE_SHARED_LINKER_FLAGS="/LTCG" -DBUILD_AS_BUNDLE=ON ..  
  
after_build:  
  - cmake --build . --config Release --target package  
  
artifacts:  
  - path: build\RTABMap-*  
  - path: build\*.exe  
  - path: build\*  
  
notifications:  
  - provider: Email  
    to:  
      - matlabbe@gmail.com  
    on_build_success: false  
    on_build_failure: false  
    on_build_status_changed: true
